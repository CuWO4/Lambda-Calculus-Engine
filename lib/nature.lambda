import "logic.lambda"

# ++n := \n.\f.\x. f (n f x)
# --n := \n.\f.\x. n (\g.\h. h (g f)) (\u. x) (\u. u)

# +n := \m.\n. m ++n n
# -n := \m.\n. n --n m
# *n := \m.\n. m {+n n} 0
# ^n := \b.\e. e {b}

# 0n? := \n. n (\x. $F) $T
# <=n := \m.\n. 0n? (-n m n)
# >=n := \m.\n. 0n? (-n n m)
# =n := \m.\n. 
  (\m.\n.
    & (<=n m n) (>=n m n)
  ) {m} {n}
# !=n := \m.\n. ! {=n m n}
# <n := \m.\n. <=n {++n m} n
# >n := \m.\n. >=n m {++n n}

# %n := \m.\n.
  (\m.\n.
    {<n m n}
      $m
      $(%n (-n m n) n)
  ) {m} {n}

# div? := \m.\n.
  0n? (%n n m)

# prime? := \n.
  (\n.
    {<=n n 1}
      $F
      $(prime_impl n 2)
  ) {n}

# prime_impl := \n.\i.
  {<=n (*n i i) n}
    $(
      {div? i n}
        $F
        (prime_impl n {++n i})
    )
    $T

# gcd := \m.\n.
  (\m.\n.
    {>=n m n}
      $(gcd n m)
      $(
        {0n? m}
        $n
        $(gcd (%n n m) m)
      )
  ) {m} {n}